/* [ File: POSTER.CONF ] */
/*----------------------------------------------------------------------------*/
/*
*//* Configuration header for DSC model evaluation program POSTER
*//* [ Update: 27 July 2007 ]
*/
/*----------------------------------------------------------------------------*/
# ifndef DSC_RELEASE
   # define DSC_RELEASE "1.0"
# endif
/*----------------------------------------------------------------------------*/
# ifndef DSC_UPDATE
   # define DSC_UPDATE "27.06.2007"
# endif
/*----------------------------------------------------------------------------*/
# define DSC_SYSTEM "../model.c"
# define GSC_SYSTEM DSC_SYSTEM
/*----------------------------------------------------------------------------*/
/* file identifiers [ names, pre- and suffixes etc. ]:                        */
# ifndef DSC_PRFX
   # define DSC_PRFX "dsc."/* common file prefix for DSC operation files */
# endif
/*----------------------------------------------------------------------------*/
/* DSC system dimensions [ should in general coincede with same parameters in */
/* files FORMER.CONF ] */                           
# define CPNTS  25000 /* max. number of vertex points */
# define NODES  20000 /* max. number of mesh cells */
# define NRSMX  NODES /* max. number of s-matrix labels */
/*----------------------------------------------------------------------------*/
/* FFT array dimensions: */
/* The maximum number of simultaneously evaluated ports:                      */
# define FTR_NMBR 10

/* The maximum number of sample points = maximum number of evaluated time */ 
/* steps + ONE [ this should be a power of two; 131072 = 2^17, e.g.]: */
# define FTR_SIZE 65536 /* = 2^16 */
/*----------------------------------------------------------------------------*/
/* FFT storage convention: */
# define READ_REVERSE_ 0 /*1: read distribs.starting with upper half of domain*/
# define WRITE_REVERSE 1 /*1: save spectra  starting ...  "     "    "  "     */
/*----------------------------------------------------------------------------*/
/* The maximum number of evaluated ports: */
# define EVLEP 200 /* maximum number of E ports */
# define EVLHP  20 /* maximum number of H ports */
# define EVLEN   1 /* maximum number of E nodes */
# define EVLHN   1 /* maximum number of H nodes */
/*............................................................................*/
/* Disable/enable heat propagation [ 0/1; if not defined in CONFIG.H ] */
# ifndef DSC_HCRMDE
   # define DSC_HCRMDE 1
# endif
/*............................................................................*/
# if DSC_HCRMDE != 0
   # define EVLTF  50 /* maximum number of evaluated temperature faces */
   # define EVLTN  50 /* maximum number of evaluated temperature nodes */
   # define EVLHC   1 /* maximum number of evaluated heat current faces */
   # define EVLTF  50 /* maximum number of evaluated temperature faces */
   # define EVLTN  50 /* maximum number of evaluated temperature nodes */
   # define EVLHC   1 /* maximum number of evaluated heat current faces */
/*............................................................................*/
/* Disable/enable fluids [ 0/1; if not defined in CONFIG.H ] */
   # ifndef DSC_FLDMDE
      # define DSC_FLDMDE 1
   # endif
/*............................................................................*/
# if DSC_FLDMDE != 0
   # define NFCNN  10 /* maximum number of fluids [ connected components ] */
   # define BNDUN   1 /* maximum number of imposed internal flows */
   # define BNDUF   1 /* maximum number of imposed boundary face flows */
   # define EVLUN  20 /* maximum number of evaluated nodal flows */
   # define EVLUF   1 /* maximum number of evaluated cell face flows */
# endif
/*............................................................................*/
/* Disable/enable face temperature evaluation */
/* [ 0/1; if not defined in CONFIG.H ] */
   # ifndef DSC_FCTEMP
      # define DSC_FCTEMP 1 /* 1: store face temperatures */
   # endif
/*............................................................................*/
# endif /* DSC_HCRMDE != 0 */
/*----------------------------------------------------------------------------*/
/* Compute and store S-parameter phases with EVL_SPHASES set to 1: */
# ifndef EVL_SPHASES
   # define EVL_SPHASES 1
# endif
/*----------------------------------------------------------------------------*/
/* The maximum number of special frequencies to be evaluated: */
# ifndef EVL_SPF
   # define EVL_SPF 1000
# endif
/*----------------------------------------------------------------------------*/
/* The number of graphics interpolation points. */
# ifndef EVL_GPHINTP
   # define EVL_GPHINTP 5
# endif
/*----------------------------------------------------------------------------*/
/* The unscaled evaluation range: abs( log10(x) ) < GPH_UNSCALED [ i.e. beyond*/
/* the interval ( 1.e-EVL_UNSCALED, 1.e+EVL_UNSCALED ) values are rescaled ]  */
/* Maximum unscaled range: abs( log10(x) ) < EVL_UNSCALED: */
# ifndef EVL_UNSCALED
   # define EVL_UNSCALED 9
# endif
/*----------------------------------------------------------------------------*/
# define MAX_PERIOD ( FTR_NMBR )
/* macro FTR_NMBR is usually defined in file "fftrf.h" */
/*----------------------------------------------------------------------------*/
/* Choose your POSTER plot format by customizing these flags: */
# define PLOT_FORMAT "gnuplot_2D" /*plot file format: "SPLINE" or "gnuplot"   */

# ifndef EVL_TIMERSP
   # define EVL_TIMERSP 1 /* ( 0 ) 1: ( don't ) plot time response            */
# endif
# ifndef EVL_FREQRSP
   # define EVL_FREQRSP 1 /* ( 0 ) 1: ( don't ) plot spectral response        */
# endif
# ifndef EVL_WRTFREQ
   # define EVL_WRTFREQ 1 /* ( 0 ) 1: ( don't ) read/write frequencies        */
# endif                   /*       from/into 'spc.xyz' files                  */
/*----------------------------------------------------------------------------*/
/* spline related dimensions: */
# ifndef SPL_SPNTS
   # define SPL_SPNTS 5000 /* maximum number of support points               */
# endif
# ifndef SPL_INTPL
   # define SPL_INTPL 5000 /* maximum number of interpolation points         */
# endif
# ifndef SPL_MAXIT
   # define SPL_MAXIT 1000  /* maximum number of iterations                   */
# endif
# define SPL_BOUND ( 1.000e-07 )
/*----------------------------------------------------------------------------*/
/* graphical array dimensions: */
# ifndef GPH_USCALE
   # define GPH_USCALE 0 /* 1: choose uniform scales on xy axes */
# endif
# ifndef GPH_CURVES
   # define GPH_CURVES 20  /* maximum number of graphics ['curves'] to be */
# endif                    /* plotted into one picture */
# ifndef GPH_POINTS
   # define GPH_POINTS 10000 /* maximum number of graphics points */
# endif
# ifndef GPH_DATFLE
   # define GPH_DATFLE "dat"
# endif
# ifndef GPH_RNDOFF
   # define GPH_RNDOFF 7 /* roundoff graphics up to that number of digits */
# endif
/* The unscaled gnuplot range: abs( log10(x) ) < GPH_UNSCALED [ i.e. beyond */
/* the interval ( 1.e-GPH_UNSCALED, 1.e+GPH_UNSCALED ) values are rescaled ] */
# ifndef GPH_UNSCALED
   # define GPH_UNSCALED 9
# endif                  
/*----------------------------------------------------------------------------*/
/*************************** end of file POSTER.CONF **************************/
