[File: README] 
General information about the DSC program package DANSE
-------------------------------------------------------
release 1.0r3

April 08, 2011
Steffen Hein <contact@sfenx.de>

For installation instructions see the INSTALL script
-------------------------------------------------------------------------------
The DSC program package DANSE [ Discrete Approximation of the Navier-Stokes
Equations ] contains EXPERIMENTAL software that was developed for testing 
the functionality and reliability of the DSC numerical scheme presented in
the article »Large eddy approximation of turbulent flow in DSC schemes«
[ https://archive.org/details/s_hein_20080827 ]
It is expressively pointed out that this is TEST software that is not made
for CAD purposes ( even if the author used it occasionally for such 
applications ).
The implemented algorithm combines a Maxfeld field Solver with a Navier- 
Stokes numerical Solver which simultaneously approximate conductive and
convective heat transfer by Boussinesq incompressible flow and elecromagnetic 
wave propagation in passive microwave devices [ such as fluid filled coaxial
lines, radio frequency or microwave filters, couplers, antennas, etc.]
The numerical schemes are based on the TLM and Dual Scattering Channel (DSC)
methods of discrete approximation as developed in the author's papers [1-4].
-------------------------------------------------------------------------------
The compiled package provides a model-independent core program »SOLVER«
['solver.do'] and two model-dependent executable programs, one of them 
»FORMER« ['former.do'] for pre-processing, and another »POSTER« ['poster.do']
for post-processing. 
    
FORMER essentially translates the given physical structure [ characterized
by geometry, material parameters and boundary conditions, e.g. ] together
with the wanted excitation and evaluation modes and operating conditions,
[ a time/frequency domain indicator, etc.] into a DSC model [ 'model.c'],
represented by a set of structure files that can be read and processed 
by the SOLVER core program.

POSTER evaluates the SOLVER output in a model dependent manner, by storing
or plotting fluid flow patterns, temperature distributions, for instance,   
or electromagnetic S-parameters in the wanted fashion [ Smith diagrams, e.g. ]
To this end, plot files are created that can be evaluated by common graphical
software [ such as GNUPLOT, e.g. ].

The [five] structure files generated by FORMER - processed with SOLVER - are
prefixed by 'dsc.' and usually labelled with a job index [ max. three decimal
digits ].
Another model independent batch file 'dsc.batch' specifies batch processes
by labelling subsequent job numbers with the pertinent five structure files.

The five model dependent structure files read by SOLVER are named as follows 
and contain information as indicated:

      File name   |  Information 
=============================================================================
      dsc.top<n>  |  the DSC mesh topology
                  |  [ including electric or magnetic walls - this file is 
                  |    time/frequency domain independent ]
                  |
      dsc.smx<n>  |  the nodal S-parameters 
                  |  [ with a time/frequency domain indicator ]
                  |
      dsc.bnd<n>  |  the boundary conditions
                  |  [ with a time/frequency domain indicator ]
                  |
      dsc.exc<n>  |  the excitation mode(s) 
                  |  [ with a time/frequency domain indicator ]
                  |
      dsc.val<n>  |  the evaluation instructions: nodes, ports, and modes
                  |  [ on creation, with ELSY, this file is time/frequency
                  |  domain independent ]
=============================================================================

In the last file [ dsc.val<n> ] also some output computed by the DSC core
program SOLVER is stored. At program start, SOLVER appends a time/frequeny
domain indicator and additional informations about excitation and operation
modes [ number of iterations, repetition rate etc.] at the header [ always
to be written by the FORMER program ]. During operation, the SOLVER 
continuously stores in this file the computed values [ such as temperatures,
fluid velocities, or voltages and currents that represent the electric field 
strengths, e.g. ].
Only in file dsc.val<n> label <n> must agree with the job label. The labels 
of the other files are arbitrary [ they must not agree with the job label ].
Usually these labels are cited in the batch file dsc.batch, so indicating
the subsequent input for the SOLVER in batch file mode. The batch file 
dsc.batch can optionally be created with FORMER or SOLVER [ in the latter
case immediately starting the SOLVER in the console input mode offered in
the start menu ].                                       
                                                             To be edited.
-------------------------------------------------------------------------------
References

   [1] Steffen Hein, Finite difference time-domain approximation of Maxwell's
       Equations with non-orthogonal condensed TLM mesh, International Journal
       of Numerical Modelling, vol.7, 179-188 (1994) 

   [2] Steffen Hein, TLM numerical solution of Bloch's equations for magnetized
       gyrotropic media, Applied Mathematical Modelling, vol.21, 221-229 (1997) 

   [3] Steffen Hein, A DSC Approach to Computational Fluid Dynamics,
       Proceedings of MASCOT05 - 5th Meeting on Applied Scientific Computing
       and Tools, Lecce - Italy, October 2005, IMACS Series in Computational
       and Applied Mathematics, ISSN 1098-870X, Volume 10, p. 41 ff.
       See also Cornell University, e-PRINT archive: math/0603704
       https://arxiv.org/abs/math/0510070

   [4] Steffen Hein, Large eddy approximation of turbulent flow in DSC schemes, 
       Cornell University, e-PRINT archive: math/0603704, March 30, 2006
       https://arxiv.org/abs/math/0603704
-------------------------------------------------------------------------------
Thanks for using DANSE
                          Steffen Hein 
                                                mailto: <contact@sfenx.de>
